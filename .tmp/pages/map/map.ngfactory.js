/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './map';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '../../providers/task-data';
import * as import5 from '../../providers/storage';
import * as import6 from '@angular/core/src/linker/view_utils';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/change_detection';
import * as import10 from '@angular/http/src/http';
import * as import11 from 'ionic-angular/navigation/nav-controller';
import * as import12 from '@angular/core/src/metadata/view';
import * as import13 from '@angular/core/src/linker/component_factory';
import * as import14 from '../../node_modules/ionic-angular/components/content/content.ngfactory';
import * as import15 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import16 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import17 from '../../node_modules/ionic-angular/components/segment/segment.ngfactory';
import * as import18 from '@angular/core/src/linker/query_list';
import * as import19 from 'ionic-angular/config/config';
import * as import20 from '@angular/core/src/linker/element_ref';
import * as import21 from 'ionic-angular/components/app/app';
import * as import22 from 'ionic-angular/util/keyboard';
import * as import23 from '@angular/core/src/zone/ng_zone';
import * as import24 from 'ionic-angular/navigation/view-controller';
import * as import25 from 'ionic-angular/components/tabs/tabs';
import * as import26 from 'ionic-angular/components/segment/segment';
import * as import27 from '@angular/forms/src/directives/ng_model';
import * as import28 from '@angular/forms/src/directives/ng_control';
import * as import29 from '@angular/forms/src/directives/ng_control_status';
import * as import30 from 'ionic-angular/components/content/content';
export var Wrapper_MapPage = (function () {
    function Wrapper_MapPage(p0, p1, p2) {
        this.changed = false;
        this.context = new import0.MapPage(p0, p1, p2);
    }
    Wrapper_MapPage.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_MapPage;
}());
var renderType_MapPage_Host = null;
var _View_MapPage_Host0 = (function (_super) {
    __extends(_View_MapPage_Host0, _super);
    function _View_MapPage_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MapPage_Host0, renderType_MapPage_Host, import8.ViewType.HOST, viewUtils, parentInjector, declarationEl, import9.ChangeDetectorStatus.CheckAlways);
    }
    _View_MapPage_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('page-map', rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_MapPage0(this.viewUtils, this.injector(0), this._appEl_0);
        this._TaskData_0_4 = new import4.TaskData(this.parentInjector.get(import10.Http));
        this._Storage_0_5 = new import5.Storage();
        this._MapPage_0_6 = new Wrapper_MapPage(this.parentInjector.get(import11.NavController), this._TaskData_0_4, this._Storage_0_5);
        this._appEl_0.initComponent(this._MapPage_0_6.context, [], compView_0);
        compView_0.create(this._MapPage_0_6.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_MapPage_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import4.TaskData) && (0 === requestNodeIndex))) {
            return this._TaskData_0_4;
        }
        if (((token === import5.Storage) && (0 === requestNodeIndex))) {
            return this._Storage_0_5;
        }
        if (((token === import0.MapPage) && (0 === requestNodeIndex))) {
            return this._MapPage_0_6.context;
        }
        return notFoundResult;
    };
    _View_MapPage_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._MapPage_0_6.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_MapPage_Host0;
}(import1.AppView));
function viewFactory_MapPage_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MapPage_Host === null)) {
        (renderType_MapPage_Host = viewUtils.createRenderComponentType('', 0, import12.ViewEncapsulation.None, [], {}));
    }
    return new _View_MapPage_Host0(viewUtils, parentInjector, declarationEl);
}
export var MapPageNgFactory = new import13.ComponentFactory('page-map', viewFactory_MapPage_Host0, import0.MapPage);
var styles_MapPage = [];
var renderType_MapPage = null;
var _View_MapPage0 = (function (_super) {
    __extends(_View_MapPage0, _super);
    function _View_MapPage0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_MapPage0, renderType_MapPage, import8.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import9.ChangeDetectorStatus.CheckAlways);
    }
    _View_MapPage0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n\n\n', null);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'ion-content', null);
        this._appEl_1 = new import3.AppElement(1, null, this, this._el_1);
        var compView_1 = import14.viewFactory_Content0(this.viewUtils, this.injector(1), this._appEl_1);
        this._Content_1_4 = new import14.Wrapper_Content(this.parentInjector.get(import19.Config), new import20.ElementRef(this._el_1), this.renderer, this.parentInjector.get(import21.App), this.parentInjector.get(import22.Keyboard), this.parentInjector.get(import23.NgZone), this.parentInjector.get(import24.ViewController, null), this.parentInjector.get(import25.Tabs, null));
        this._appEl_1.initComponent(this._Content_1_4.context, [], compView_1);
        this._text_2 = this.renderer.createText(null, '\n\n  ', null);
        this._el_3 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_3, 'id', 'container');
        this.renderer.setElementAttribute(this._el_3, 'style', 'height:100% ;');
        this._text_4 = this.renderer.createText(null, '\n  ', null);
        this._el_5 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_5, 'class', 'contentGray');
        this.renderer.setElementAttribute(this._el_5, 'style', 'height: 2% ;width: 50% ;position:absolute;left:25%; top:5%');
        this._text_6 = this.renderer.createText(this._el_5, '\n    ', null);
        this._el_7 = this.renderer.createElement(this._el_5, 'ion-segment', null);
        this.renderer.setElementAttribute(this._el_7, 'color', 'blue');
        this._NgModel_7_3 = new import15.Wrapper_NgModel(null, null, null, null);
        this._NgControl_7_4 = this._NgModel_7_3.context;
        this._NgControlStatus_7_5 = new import16.Wrapper_NgControlStatus(this._NgControl_7_4);
        this._Segment_7_6 = new import17.Wrapper_Segment(this.parentInjector.get(import19.Config), new import20.ElementRef(this._el_7), this.renderer, this._NgControl_7_4);
        this._query_SegmentButton_7_0 = new import18.QueryList();
        this._text_8 = this.renderer.createText(this._el_7, '\n      ', null);
        this._el_9 = this.renderer.createElement(this._el_7, 'ion-segment-button', null);
        this.renderer.setElementAttribute(this._el_9, 'class', 'segment-button');
        this.renderer.setElementAttribute(this._el_9, 'role', 'button');
        this.renderer.setElementAttribute(this._el_9, 'tappable', '');
        this.renderer.setElementAttribute(this._el_9, 'value', 'doing');
        this._appEl_9 = new import3.AppElement(9, 7, this, this._el_9);
        var compView_9 = import17.viewFactory_SegmentButton0(this.viewUtils, this.injector(9), this._appEl_9);
        this._SegmentButton_9_4 = new import17.Wrapper_SegmentButton(this.renderer, new import20.ElementRef(this._el_9));
        this._appEl_9.initComponent(this._SegmentButton_9_4.context, [], compView_9);
        this._text_10 = this.renderer.createText(null, '\n        正在直播\n      ', null);
        compView_9.create(this._SegmentButton_9_4.context, [[].concat([this._text_10])], null);
        this._text_11 = this.renderer.createText(this._el_7, '\n      ', null);
        this._el_12 = this.renderer.createElement(this._el_7, 'ion-segment-button', null);
        this.renderer.setElementAttribute(this._el_12, 'class', 'segment-button');
        this.renderer.setElementAttribute(this._el_12, 'role', 'button');
        this.renderer.setElementAttribute(this._el_12, 'tappable', '');
        this.renderer.setElementAttribute(this._el_12, 'value', 'toDo');
        this._appEl_12 = new import3.AppElement(12, 7, this, this._el_12);
        var compView_12 = import17.viewFactory_SegmentButton0(this.viewUtils, this.injector(12), this._appEl_12);
        this._SegmentButton_12_4 = new import17.Wrapper_SegmentButton(this.renderer, new import20.ElementRef(this._el_12));
        this._appEl_12.initComponent(this._SegmentButton_12_4.context, [], compView_12);
        this._text_13 = this.renderer.createText(null, '\n        等待直播\n      ', null);
        compView_12.create(this._SegmentButton_12_4.context, [[].concat([this._text_13])], null);
        this._text_14 = this.renderer.createText(this._el_7, '\n    ', null);
        this._text_15 = this.renderer.createText(this._el_5, '\n  ', null);
        this._text_16 = this.renderer.createText(null, '\n', null);
        compView_1.create(this._Content_1_4.context, [
            [],
            [].concat([
                this._text_2,
                this._el_3,
                this._text_4,
                this._el_5,
                this._text_16
            ]),
            []
        ], null);
        this._text_17 = this.renderer.createText(parentRenderNode, '\n', null);
        this._expr_0 = import9.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_7, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_7_0.bind(this)));
        var subscription_0 = this._NgModel_7_3.context.update.subscribe(this.eventHandler(this._handle_ngModelChange_7_0.bind(this)));
        this._expr_3 = import9.UNINITIALIZED;
        this._expr_4 = import9.UNINITIALIZED;
        this._expr_5 = import9.UNINITIALIZED;
        this._expr_6 = import9.UNINITIALIZED;
        this._expr_7 = import9.UNINITIALIZED;
        this._expr_8 = import9.UNINITIALIZED;
        var disposable_1 = this.renderer.listen(this._el_9, 'ionSelect', this.eventHandler(this._handle_ionSelect_9_0.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_9, 'click', this.eventHandler(this._handle_click_9_1.bind(this)));
        var subscription_1 = this._SegmentButton_9_4.context.ionSelect.subscribe(this.eventHandler(this._handle_ionSelect_9_0.bind(this)));
        var disposable_3 = this.renderer.listen(this._el_12, 'ionSelect', this.eventHandler(this._handle_ionSelect_12_0.bind(this)));
        var disposable_4 = this.renderer.listen(this._el_12, 'click', this.eventHandler(this._handle_click_12_1.bind(this)));
        var subscription_2 = this._SegmentButton_12_4.context.ionSelect.subscribe(this.eventHandler(this._handle_ionSelect_12_0.bind(this)));
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._text_14,
            this._text_15,
            this._text_16,
            this._text_17
        ], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4
        ], [
            subscription_0,
            subscription_1,
            subscription_2
        ]);
        return null;
    };
    _View_MapPage0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import26.SegmentButton) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 10)))) {
            return this._SegmentButton_9_4.context;
        }
        if (((token === import26.SegmentButton) && ((12 <= requestNodeIndex) && (requestNodeIndex <= 13)))) {
            return this._SegmentButton_12_4.context;
        }
        if (((token === import27.NgModel) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 14)))) {
            return this._NgModel_7_3.context;
        }
        if (((token === import28.NgControl) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 14)))) {
            return this._NgControl_7_4;
        }
        if (((token === import29.NgControlStatus) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 14)))) {
            return this._NgControlStatus_7_5.context;
        }
        if (((token === import26.Segment) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 14)))) {
            return this._Segment_7_6.context;
        }
        if (((token === import30.Content) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 16)))) {
            return this._Content_1_4.context;
        }
        return notFoundResult;
    };
    _View_MapPage0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._Content_1_4.detectChangesInternal(this, this._el_1, throwOnChange)) {
            this._appEl_1.componentView.markAsCheckOnce();
        }
        var currVal_2 = this.context.taskType;
        this._NgModel_7_3.check_model(currVal_2, throwOnChange, false);
        this._NgModel_7_3.detectChangesInternal(this, this._el_7, throwOnChange);
        this._NgControlStatus_7_5.detectChangesInternal(this, this._el_7, throwOnChange);
        var currVal_9 = 'blue';
        this._Segment_7_6.check_color(currVal_9, throwOnChange, false);
        this._Segment_7_6.detectChangesInternal(this, this._el_7, throwOnChange);
        var currVal_12 = 'doing';
        this._SegmentButton_9_4.check_value(currVal_12, throwOnChange, false);
        this._SegmentButton_9_4.detectChangesInternal(this, this._el_9, throwOnChange);
        var currVal_15 = 'toDo';
        this._SegmentButton_12_4.check_value(currVal_15, throwOnChange, false);
        this._SegmentButton_12_4.detectChangesInternal(this, this._el_12, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_SegmentButton_7_0.dirty) {
                this._query_SegmentButton_7_0.reset([
                    this._SegmentButton_9_4.context,
                    this._SegmentButton_12_4.context
                ]);
                this._Segment_7_6.context._buttons = this._query_SegmentButton_7_0;
                this._query_SegmentButton_7_0.notifyOnChanges();
            }
        }
        var currVal_0 = this._Content_1_4.context._sbPadding;
        if (import6.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementClass(this._el_1, 'statusbar-padding', currVal_0);
            this._expr_0 = currVal_0;
        }
        var currVal_3 = this._NgControlStatus_7_5.context.ngClassUntouched;
        if (import6.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementClass(this._el_7, 'ng-untouched', currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_4 = this._NgControlStatus_7_5.context.ngClassTouched;
        if (import6.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setElementClass(this._el_7, 'ng-touched', currVal_4);
            this._expr_4 = currVal_4;
        }
        var currVal_5 = this._NgControlStatus_7_5.context.ngClassPristine;
        if (import6.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this.renderer.setElementClass(this._el_7, 'ng-pristine', currVal_5);
            this._expr_5 = currVal_5;
        }
        var currVal_6 = this._NgControlStatus_7_5.context.ngClassDirty;
        if (import6.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this.renderer.setElementClass(this._el_7, 'ng-dirty', currVal_6);
            this._expr_6 = currVal_6;
        }
        var currVal_7 = this._NgControlStatus_7_5.context.ngClassValid;
        if (import6.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setElementClass(this._el_7, 'ng-valid', currVal_7);
            this._expr_7 = currVal_7;
        }
        var currVal_8 = this._NgControlStatus_7_5.context.ngClassInvalid;
        if (import6.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementClass(this._el_7, 'ng-invalid', currVal_8);
            this._expr_8 = currVal_8;
        }
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Segment_7_6.context.ngAfterViewInit();
            }
        }
    };
    _View_MapPage0.prototype.destroyInternal = function () {
        this._NgModel_7_3.context.ngOnDestroy();
        this._Content_1_4.context.ngOnDestroy();
    };
    _View_MapPage0.prototype._handle_ngModelChange_7_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context.taskType = $event) !== false);
        return (true && pd_0);
    };
    _View_MapPage0.prototype._handle_ionSelect_9_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.selectDoing() !== false);
        return (true && pd_0);
    };
    _View_MapPage0.prototype._handle_click_9_1 = function ($event) {
        this._appEl_9.componentView.markPathToRootAsCheckOnce();
        var pd_0 = (this._SegmentButton_9_4.context.onClick() !== false);
        return (true && pd_0);
    };
    _View_MapPage0.prototype._handle_ionSelect_12_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.selectToDo() !== false);
        return (true && pd_0);
    };
    _View_MapPage0.prototype._handle_click_12_1 = function ($event) {
        this._appEl_12.componentView.markPathToRootAsCheckOnce();
        var pd_0 = (this._SegmentButton_12_4.context.onClick() !== false);
        return (true && pd_0);
    };
    return _View_MapPage0;
}(import1.AppView));
export function viewFactory_MapPage0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_MapPage === null)) {
        (renderType_MapPage = viewUtils.createRenderComponentType('', 0, import12.ViewEncapsulation.None, styles_MapPage, {}));
    }
    return new _View_MapPage0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=map.ngfactory.js.map