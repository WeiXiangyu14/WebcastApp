/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from './map';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '../../providers/task-data';
import * as import5 from '../../providers/storage';
import * as import6 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/di/injector';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/change_detection';
import * as import10 from '@angular/http/src/http';
import * as import11 from 'ionic-angular/navigation/nav-controller';
import * as import12 from '@angular/core/src/metadata/view';
import * as import13 from '@angular/core/src/linker/component_factory';
import * as import14 from '../../node_modules/ionic-angular/components/content/content.ngfactory';
import * as import15 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import16 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import17 from '../../node_modules/ionic-angular/components/segment/segment.ngfactory';
import * as import18 from '@angular/core/src/linker/query_list';
import * as import19 from 'ionic-angular/config/config';
import * as import20 from '@angular/core/src/linker/element_ref';
import * as import21 from 'ionic-angular/components/app/app';
import * as import22 from 'ionic-angular/util/keyboard';
import * as import23 from '@angular/core/src/zone/ng_zone';
import * as import24 from 'ionic-angular/navigation/view-controller';
import * as import25 from 'ionic-angular/components/tabs/tabs';
import * as import26 from 'ionic-angular/components/segment/segment';
import * as import27 from '@angular/forms/src/directives/ng_model';
import * as import28 from '@angular/forms/src/directives/ng_control';
import * as import29 from '@angular/forms/src/directives/ng_control_status';
import * as import30 from 'ionic-angular/components/content/content';
export class Wrapper_MapPage {
  context:import0.MapPage;
  changed:boolean;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this.context = new import0.MapPage(p0,p1,p2);
  }
  detectChangesInternal(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
var renderType_MapPage_Host:import2.RenderComponentType = (null as any);
class _View_MapPage_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _TaskData_0_4:import4.TaskData;
  _Storage_0_5:import5.Storage;
  _MapPage_0_6:Wrapper_MapPage;
  constructor(viewUtils:import6.ViewUtils,parentInjector:import7.Injector,declarationEl:import3.AppElement) {
    super(_View_MapPage_Host0,renderType_MapPage_Host,import8.ViewType.HOST,viewUtils,parentInjector,declarationEl,import9.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = this.selectOrCreateHostElement('page-map',rootSelector,(null as any));
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_MapPage0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TaskData_0_4 = new import4.TaskData(this.parentInjector.get(import10.Http));
    this._Storage_0_5 = new import5.Storage();
    this._MapPage_0_6 = new Wrapper_MapPage(this.parentInjector.get(import11.NavController),this._TaskData_0_4,this._Storage_0_5);
    this._appEl_0.initComponent(this._MapPage_0_6.context,([] as any[]),compView_0);
    compView_0.create(this._MapPage_0_6.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import4.TaskData) && (0 === requestNodeIndex))) { return this._TaskData_0_4; }
    if (((token === import5.Storage) && (0 === requestNodeIndex))) { return this._Storage_0_5; }
    if (((token === import0.MapPage) && (0 === requestNodeIndex))) { return this._MapPage_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MapPage_0_6.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_MapPage_Host0(viewUtils:import6.ViewUtils,parentInjector:import7.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  if ((renderType_MapPage_Host === (null as any))) { (renderType_MapPage_Host = viewUtils.createRenderComponentType('',0,import12.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_MapPage_Host0(viewUtils,parentInjector,declarationEl);
}
export const MapPageNgFactory:import13.ComponentFactory<import0.MapPage> = new import13.ComponentFactory<import0.MapPage>('page-map',viewFactory_MapPage_Host0,import0.MapPage);
const styles_MapPage:any[] = ([] as any[]);
var renderType_MapPage:import2.RenderComponentType = (null as any);
class _View_MapPage0 extends import1.AppView<import0.MapPage> {
  _text_0:any;
  _el_1:any;
  /*private*/ _appEl_1:import3.AppElement;
  _Content_1_4:import14.Wrapper_Content;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _NgModel_7_3:import15.Wrapper_NgModel;
  _NgControl_7_4:any;
  _NgControlStatus_7_5:import16.Wrapper_NgControlStatus;
  _Segment_7_6:import17.Wrapper_Segment;
  _query_SegmentButton_7_0:import18.QueryList<any>;
  _text_8:any;
  _el_9:any;
  /*private*/ _appEl_9:import3.AppElement;
  _SegmentButton_9_4:import17.Wrapper_SegmentButton;
  _text_10:any;
  _text_11:any;
  _el_12:any;
  /*private*/ _appEl_12:import3.AppElement;
  _SegmentButton_12_4:import17.Wrapper_SegmentButton;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  constructor(viewUtils:import6.ViewUtils,parentInjector:import7.Injector,declarationEl:import3.AppElement) {
    super(_View_MapPage0,renderType_MapPage,import8.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import9.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n\n\n',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'ion-content',(null as any));
    this._appEl_1 = new import3.AppElement(1,(null as any),this,this._el_1);
    var compView_1:any = import14.viewFactory_Content0(this.viewUtils,this.injector(1),this._appEl_1);
    this._Content_1_4 = new import14.Wrapper_Content(this.parentInjector.get(import19.Config),new import20.ElementRef(this._el_1),this.renderer,this.parentInjector.get(import21.App),this.parentInjector.get(import22.Keyboard),this.parentInjector.get(import23.NgZone),this.parentInjector.get(import24.ViewController,(null as any)),this.parentInjector.get(import25.Tabs,(null as any)));
    this._appEl_1.initComponent(this._Content_1_4.context,([] as any[]),compView_1);
    this._text_2 = this.renderer.createText((null as any),'\n\n  ',(null as any));
    this._el_3 = this.renderer.createElement((null as any),'div',(null as any));
    this.renderer.setElementAttribute(this._el_3,'id','container');
    this.renderer.setElementAttribute(this._el_3,'style','height:100% ;');
    this._text_4 = this.renderer.createText((null as any),'\n  ',(null as any));
    this._el_5 = this.renderer.createElement((null as any),'div',(null as any));
    this.renderer.setElementAttribute(this._el_5,'class','contentGray');
    this.renderer.setElementAttribute(this._el_5,'style','height: 2% ;width: 50% ;position:absolute;left:25%; top:5%');
    this._text_6 = this.renderer.createText(this._el_5,'\n    ',(null as any));
    this._el_7 = this.renderer.createElement(this._el_5,'ion-segment',(null as any));
    this.renderer.setElementAttribute(this._el_7,'color','blue');
    this._NgModel_7_3 = new import15.Wrapper_NgModel((null as any),(null as any),(null as any),(null as any));
    this._NgControl_7_4 = this._NgModel_7_3.context;
    this._NgControlStatus_7_5 = new import16.Wrapper_NgControlStatus(this._NgControl_7_4);
    this._Segment_7_6 = new import17.Wrapper_Segment(this.parentInjector.get(import19.Config),new import20.ElementRef(this._el_7),this.renderer,this._NgControl_7_4);
    this._query_SegmentButton_7_0 = new import18.QueryList<any>();
    this._text_8 = this.renderer.createText(this._el_7,'\n      ',(null as any));
    this._el_9 = this.renderer.createElement(this._el_7,'ion-segment-button',(null as any));
    this.renderer.setElementAttribute(this._el_9,'class','segment-button');
    this.renderer.setElementAttribute(this._el_9,'role','button');
    this.renderer.setElementAttribute(this._el_9,'tappable','');
    this.renderer.setElementAttribute(this._el_9,'value','doing');
    this._appEl_9 = new import3.AppElement(9,7,this,this._el_9);
    var compView_9:any = import17.viewFactory_SegmentButton0(this.viewUtils,this.injector(9),this._appEl_9);
    this._SegmentButton_9_4 = new import17.Wrapper_SegmentButton(this.renderer,new import20.ElementRef(this._el_9));
    this._appEl_9.initComponent(this._SegmentButton_9_4.context,([] as any[]),compView_9);
    this._text_10 = this.renderer.createText((null as any),'\n        正在直播\n      ',(null as any));
    compView_9.create(this._SegmentButton_9_4.context,[([] as any[]).concat([this._text_10])],(null as any));
    this._text_11 = this.renderer.createText(this._el_7,'\n      ',(null as any));
    this._el_12 = this.renderer.createElement(this._el_7,'ion-segment-button',(null as any));
    this.renderer.setElementAttribute(this._el_12,'class','segment-button');
    this.renderer.setElementAttribute(this._el_12,'role','button');
    this.renderer.setElementAttribute(this._el_12,'tappable','');
    this.renderer.setElementAttribute(this._el_12,'value','toDo');
    this._appEl_12 = new import3.AppElement(12,7,this,this._el_12);
    var compView_12:any = import17.viewFactory_SegmentButton0(this.viewUtils,this.injector(12),this._appEl_12);
    this._SegmentButton_12_4 = new import17.Wrapper_SegmentButton(this.renderer,new import20.ElementRef(this._el_12));
    this._appEl_12.initComponent(this._SegmentButton_12_4.context,([] as any[]),compView_12);
    this._text_13 = this.renderer.createText((null as any),'\n        等待直播\n      ',(null as any));
    compView_12.create(this._SegmentButton_12_4.context,[([] as any[]).concat([this._text_13])],(null as any));
    this._text_14 = this.renderer.createText(this._el_7,'\n    ',(null as any));
    this._text_15 = this.renderer.createText(this._el_5,'\n  ',(null as any));
    this._text_16 = this.renderer.createText((null as any),'\n',(null as any));
    compView_1.create(this._Content_1_4.context,[
      ([] as any[]),
      ([] as any[]).concat([
        this._text_2,
        this._el_3,
        this._text_4,
        this._el_5,
        this._text_16
      ]
      ),
      ([] as any[])
    ]
    ,(null as any));
    this._text_17 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._expr_0 = import9.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_7,'ngModelChange',this.eventHandler(this._handle_ngModelChange_7_0.bind(this)));
    const subscription_0:any = this._NgModel_7_3.context.update.subscribe(this.eventHandler(this._handle_ngModelChange_7_0.bind(this)));
    this._expr_3 = import9.UNINITIALIZED;
    this._expr_4 = import9.UNINITIALIZED;
    this._expr_5 = import9.UNINITIALIZED;
    this._expr_6 = import9.UNINITIALIZED;
    this._expr_7 = import9.UNINITIALIZED;
    this._expr_8 = import9.UNINITIALIZED;
    var disposable_1:Function = this.renderer.listen(this._el_9,'ionSelect',this.eventHandler(this._handle_ionSelect_9_0.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_9,'click',this.eventHandler(this._handle_click_9_1.bind(this)));
    const subscription_1:any = this._SegmentButton_9_4.context.ionSelect.subscribe(this.eventHandler(this._handle_ionSelect_9_0.bind(this)));
    var disposable_3:Function = this.renderer.listen(this._el_12,'ionSelect',this.eventHandler(this._handle_ionSelect_12_0.bind(this)));
    var disposable_4:Function = this.renderer.listen(this._el_12,'click',this.eventHandler(this._handle_click_12_1.bind(this)));
    const subscription_2:any = this._SegmentButton_12_4.context.ionSelect.subscribe(this.eventHandler(this._handle_ionSelect_12_0.bind(this)));
    this.init(([] as any[]),[
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._text_15,
      this._text_16,
      this._text_17
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4
    ]
    ,[
      subscription_0,
      subscription_1,
      subscription_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import26.SegmentButton) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._SegmentButton_9_4.context; }
    if (((token === import26.SegmentButton) && ((12 <= requestNodeIndex) && (requestNodeIndex <= 13)))) { return this._SegmentButton_12_4.context; }
    if (((token === import27.NgModel) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgModel_7_3.context; }
    if (((token === import28.NgControl) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgControl_7_4; }
    if (((token === import29.NgControlStatus) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgControlStatus_7_5.context; }
    if (((token === import26.Segment) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._Segment_7_6.context; }
    if (((token === import30.Content) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 16)))) { return this._Content_1_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._Content_1_4.detectChangesInternal(this,this._el_1,throwOnChange)) { this._appEl_1.componentView.markAsCheckOnce(); }
    const currVal_2:any = this.context.taskType;
    this._NgModel_7_3.check_model(currVal_2,throwOnChange,false);
    this._NgModel_7_3.detectChangesInternal(this,this._el_7,throwOnChange);
    this._NgControlStatus_7_5.detectChangesInternal(this,this._el_7,throwOnChange);
    const currVal_9:any = 'blue';
    this._Segment_7_6.check_color(currVal_9,throwOnChange,false);
    this._Segment_7_6.detectChangesInternal(this,this._el_7,throwOnChange);
    const currVal_12:any = 'doing';
    this._SegmentButton_9_4.check_value(currVal_12,throwOnChange,false);
    this._SegmentButton_9_4.detectChangesInternal(this,this._el_9,throwOnChange);
    const currVal_15:any = 'toDo';
    this._SegmentButton_12_4.check_value(currVal_15,throwOnChange,false);
    this._SegmentButton_12_4.detectChangesInternal(this,this._el_12,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) { if (this._query_SegmentButton_7_0.dirty) {
      this._query_SegmentButton_7_0.reset([
        this._SegmentButton_9_4.context,
        this._SegmentButton_12_4.context
      ]
      );
      this._Segment_7_6.context._buttons = this._query_SegmentButton_7_0;
      this._query_SegmentButton_7_0.notifyOnChanges();
    } }
    const currVal_0:any = this._Content_1_4.context._sbPadding;
    if (import6.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementClass(this._el_1,'statusbar-padding',currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_3:any = this._NgControlStatus_7_5.context.ngClassUntouched;
    if (import6.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementClass(this._el_7,'ng-untouched',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this._NgControlStatus_7_5.context.ngClassTouched;
    if (import6.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementClass(this._el_7,'ng-touched',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this._NgControlStatus_7_5.context.ngClassPristine;
    if (import6.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementClass(this._el_7,'ng-pristine',currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this._NgControlStatus_7_5.context.ngClassDirty;
    if (import6.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementClass(this._el_7,'ng-dirty',currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this._NgControlStatus_7_5.context.ngClassValid;
    if (import6.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementClass(this._el_7,'ng-valid',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this._NgControlStatus_7_5.context.ngClassInvalid;
    if (import6.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_7,'ng-invalid',currVal_8);
      this._expr_8 = currVal_8;
    }
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Segment_7_6.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._NgModel_7_3.context.ngOnDestroy();
    this._Content_1_4.context.ngOnDestroy();
  }
  private _handle_ngModelChange_7_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.context.taskType = $event)) !== false);
    return (true && pd_0);
  }
  private _handle_ionSelect_9_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.selectDoing()) !== false);
    return (true && pd_0);
  }
  private _handle_click_9_1($event:any):boolean {
    this._appEl_9.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._SegmentButton_9_4.context.onClick()) !== false);
    return (true && pd_0);
  }
  private _handle_ionSelect_12_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.selectToDo()) !== false);
    return (true && pd_0);
  }
  private _handle_click_12_1($event:any):boolean {
    this._appEl_12.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._SegmentButton_12_4.context.onClick()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_MapPage0(viewUtils:import6.ViewUtils,parentInjector:import7.Injector,declarationEl:import3.AppElement):import1.AppView<import0.MapPage> {
  if ((renderType_MapPage === (null as any))) { (renderType_MapPage = viewUtils.createRenderComponentType('',0,import12.ViewEncapsulation.None,styles_MapPage,{})); }
  return new _View_MapPage0(viewUtils,parentInjector,declarationEl);
}